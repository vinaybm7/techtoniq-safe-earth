import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Toaster } from "@/components/ui/toaster";
import { Toaster as Sonner } from "@/components/ui/sonner";
import { TooltipProvider } from "@/components/ui/tooltip";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Index from "./pages/Index";
import RealTimeData from "./pages/RealTimeData";
import SafetyGuidelines from "./pages/SafetyGuidelines";
import EarthquakeStatistics from "./pages/EarthquakeStatistics";
import EarthquakeByRegion from "./pages/EarthquakeByRegion";
import EmergencyResources from "./pages/EmergencyResources";
import EducationalMaterials from "./pages/EducationalMaterials";
import LatestNews from "./pages/LatestNews";
import ContactUs from "./pages/ContactUs";
import NotFound from "./pages/NotFound";
import Subscribe from "./pages/subscribe";
import MyLocation from "./pages/MyLocation";
import { SubscriptionProvider } from "./context/SubscriptionContext.jsx";
const queryClient = new QueryClient();
const App = () => (_jsx(SubscriptionProvider, { children: _jsx(QueryClientProvider, { client: queryClient, children: _jsxs(TooltipProvider, { children: [_jsx(Toaster, {}), _jsx(Sonner, {}), _jsx(BrowserRouter, { children: _jsxs(Routes, { children: [_jsx(Route, { path: "/", element: _jsx(Index, {}) }), _jsx(Route, { path: "/real-time-data", element: _jsx(RealTimeData, {}) }), _jsx(Route, { path: "/safety-guidelines", element: _jsx(SafetyGuidelines, {}) }), _jsx(Route, { path: "/earthquake-statistics", element: _jsx(EarthquakeStatistics, {}) }), _jsx(Route, { path: "/earthquake-by-region", element: _jsx(EarthquakeByRegion, {}) }), _jsx(Route, { path: "/emergency-resources", element: _jsx(EmergencyResources, {}) }), _jsx(Route, { path: "/educational-materials", element: _jsx(EducationalMaterials, {}) }), _jsx(Route, { path: "/latest-news", element: _jsx(LatestNews, {}) }), _jsx(Route, { path: "/contact-us", element: _jsx(ContactUs, {}) }), _jsx(Route, { path: "/subscribe", element: _jsx(Subscribe, {}) }), _jsx(Route, { path: "/my-location", element: _jsx(MyLocation, {}) }), _jsx(Route, { path: "*", element: _jsx(NotFound, {}) })] }) })] }) }) }));
export default App;
